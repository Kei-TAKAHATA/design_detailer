design_detail:  # 設計概要から設計詳細生成時に使用するプロンプト
  elyza:
    simple:
      description: |
        ELYZAの設計概要から設計詳細を生成するプロンプト（シンプル版）
      template: |
        あなたはシステム設計の専門家です。
        以下の設計概要をもとに、設計詳細を日本語で3つ以上の箇条書きで出力してください。
        【設計概要】
        {design_summary}
        【設計詳細】

    detailed:
      description: |
        ELYZAの設計概要から設計詳細を生成するプロンプト（詳細版）
      template: |
        あなたはシステム設計の専門家です。
        以下の設計概要をもとに、設計詳細を日本語で3つ以上の箇条書きで出力してください。
        例1:
        【設計概要】
        人（ユーザー）が設計の概要を書いたら、大きな流れ、図を作成した結果を自動生成するツールを作成する。
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            入力コンポーネント: 設計の概要を入力するためのテキストエリア。
            出力コンポーネント: 変換されたMermaidフォーマットを表示するエリア。
            変換されたMermaidフォーマットを表示するエリア。
            生成された図を表示するエリア。
            設計の概要と図をまとめて表示するエリア。
            ボタンコンポーネント:
                「変換」ボタン: 設計の概要をMermaidフォーマットに変換し、図を生成する。
                「出力」ボタン: 設計の概要と生成された図をまとめて表示する。
        2. バックエンドロジック
            入力解析: ユーザーの入力を解析し、Mermaidフォーマットに変換するロジックを実装。
            GPTのAPIを使用して自然言語を解析し、適切なMermaidコードを生成。
        3. フロントエンドロジック (React + TypeScript)
            Mermaidの統合: Mermaid.jsを使用して、Mermaidフォーマットから図を生成。
            生成された図をユーザーインターフェースに表示。

        例2:
        【設計概要】
        会議の音声やテキストをアップロードするだけで、AIが自動的に議事録を作成し、要点やアクションアイテムを抽出してくれるツール
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            アップロードコンポーネント：会議音声ファイル（mp3, wav等）やテキストファイルをアップロードするためのUI。
            プログレスバー：音声解析や議事録生成の進捗を表示。
            結果表示エリア：生成された議事録、要点、アクションアイテムを見やすく表示。
            ダウンロードボタン：議事録や要点をテキストやPDFでダウンロード可能にする。
        2. バックエンドロジック
            音声認識：アップロードされた音声ファイルをテキストに変換（例：Google Speech-to-Text APIやWhisper等を利用）。
            議事録生成：変換されたテキストやアップロードされたテキストから、AI（GPT等）を用いて議事録を自動生成。
            要点・アクションアイテム抽出：AIが議事録から要点やアクションアイテムを抽出し、分類して返却。
            ファイル管理：アップロードファイルや生成結果の一時保存・管理。
        3. フロントエンドロジック (React + TypeScript)
            結果の整形・表示：AIから返却された議事録・要点・アクションアイテムを見やすい形式で表示。
            エラーハンドリング：アップロード失敗や解析失敗時のエラーメッセージ表示。
            ダウンロード機能：ユーザーが生成結果を簡単にダウンロードできるようにする。

        【設計概要】
        {design_summary}
        【設計詳細】
  deepseek:
    simple:
      description: |
        DeepSeekの設計概要から設計詳細を生成するプロンプト（シンプル版）
      template: |
        あなたはシステム設計の専門家です。
        以下の設計概要をもとに、設計詳細を日本語で3つ以上の箇条書きで出力してください。
        【設計概要】
        {design_summary}
        【設計詳細】

    detailed:
      description: |
        DeepSeekの設計概要から設計詳細を生成するプロンプト（詳細版）
      template: |
        あなたはシステム設計の専門家です。
        以下の設計概要をもとに、設計詳細を日本語で3つ以上の箇条書きで出力してください。
        例1:
        【設計概要】
        人（ユーザー）が設計の概要を書いたら、大きな流れ、図を作成した結果を自動生成するツールを作成する。
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            入力コンポーネント: 設計の概要を入力するためのテキストエリア。
            出力コンポーネント: 変換されたMermaidフォーマットを表示するエリア。
            変換されたMermaidフォーマットを表示するエリア。
            生成された図を表示するエリア。
            設計の概要と図をまとめて表示するエリア。
            ボタンコンポーネント:
                「変換」ボタン: 設計の概要をMermaidフォーマットに変換し、図を生成する。
                「出力」ボタン: 設計の概要と生成された図をまとめて表示する。
        2. バックエンドロジック
            入力解析: ユーザーの入力を解析し、Mermaidフォーマットに変換するロジックを実装。
            GPTのAPIを使用して自然言語を解析し、適切なMermaidコードを生成。
        3. フロントエンドロジック (React + TypeScript)
            Mermaidの統合: Mermaid.jsを使用して、Mermaidフォーマットから図を生成。
            生成された図をユーザーインターフェースに表示。

        例2:
        【設計概要】
        会議の音声やテキストをアップロードするだけで、AIが自動的に議事録を作成し、要点やアクションアイテムを抽出してくれるツール
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            アップロードコンポーネント：会議音声ファイル（mp3, wav等）やテキストファイルをアップロードするためのUI。
            プログレスバー：音声解析や議事録生成の進捗を表示。
            結果表示エリア：生成された議事録、要点、アクションアイテムを見やすく表示。
            ダウンロードボタン：議事録や要点をテキストやPDFでダウンロード可能にする。
        2. バックエンドロジック
            音声認識：アップロードされた音声ファイルをテキストに変換（例：Google Speech-to-Text APIやWhisper等を利用）。
            議事録生成：変換されたテキストやアップロードされたテキストから、AI（GPT等）を用いて議事録を自動生成。
            要点・アクションアイテム抽出：AIが議事録から要点やアクションアイテムを抽出し、分類して返却。
            ファイル管理：アップロードファイルや生成結果の一時保存・管理。
        3. フロントエンドロジック (React + TypeScript)
            結果の整形・表示：AIから返却された議事録・要点・アクションアイテムを見やすい形式で表示。
            エラーハンドリング：アップロード失敗や解析失敗時のエラーメッセージ表示。
            ダウンロード機能：ユーザーが生成結果を簡単にダウンロードできるようにする。

        【設計概要】
        {design_summary}
        【設計詳細】

mermaid:  # 設計詳細からMermaid記法のコードを生成時に使用するプロンプト
  elyza:
    simple:
      description: |
        ELYZAの設計詳細からMermaid記法のコードを生成するプロンプト（シンプル版）
      template: |
        以下の設計詳細をもとに、Mermaid記法のシーケンス図を生成してください。
        出力はMermaid記法のコードのみで、説明やコメントは不要です。
        participant名（登場人物やシステム名）は必ず日本語で記述してください。
        【設計詳細】
        {design_detail}
        【Mermaid記法の図】

    detailed:
      description: |
        ELYZAの設計詳細からMermaid記法のコードを生成するプロンプト（詳細版）
      template: |
        あなたはシステム設計の専門家です。
        以下の設計詳細をもとに、Mermaid記法のシーケンス図を生成してください。
        出力はMermaid記法のコードのみで、説明やコメントは不要です。
        participant名（登場人物やシステム名）は必ず日本語で記述してください。
        例1:
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            入力コンポーネント: 設計の概要を入力するためのテキストエリア。
            出力コンポーネント: 変換されたMermaidフォーマットを表示するエリア。
            変換されたMermaidフォーマットを表示するエリア。
            生成された図を表示するエリア。
            設計の概要と図をまとめて表示するエリア。
            ボタンコンポーネント:
                「変換」ボタン: 設計の概要をMermaidフォーマットに変換し、図を生成する。
                「出力」ボタン: 設計の概要と生成された図をまとめて表示する。
        2. バックエンドロジック
            入力解析: ユーザーの入力を解析し、Mermaidフォーマットに変換するロジックを実装。
            GPTのAPIを使用して自然言語を解析し、適切なMermaidコードを生成。
        3. フロントエンドロジック (React + TypeScript)
            Mermaidの統合: Mermaid.jsを使用して、Mermaidフォーマットから図を生成。
            生成された図をユーザーインターフェースに表示。
            出力の統合: 設計の概要と生成された図をまとめて表示するためのロジックを実装。
        【Mermaid記法の図】
        sequenceDiagram
            participant ユーザー
            participant フロントエンド
            participant バックエンド
            participant GPT_API
            participant MermaidJS

            ユーザー->>フロントエンド: 設計の概要を入力
            フロントエンド->>バックエンド: 入力データを送信
            バックエンド->>GPT_API: 自然言語解析リクエスト
            GPT_API-->>バックエンド: Mermaidフォーマット
            バックエンド-->>フロントエンド: Mermaidフォーマット
            フロントエンド->>MermaidJS: 図を生成
            MermaidJS-->>フロントエンド: 図のデータ
            フロントエンド-->>ユーザー: 図を表示

        例2:
        【設計詳細】
        1. ユーザーインターフェース (React + TypeScript)
            アップロードコンポーネント：会議音声ファイル（mp3, wav等）やテキストファイルをアップロードするためのUI。
            プログレスバー：音声解析や議事録生成の進捗を表示。
            結果表示エリア：生成された議事録、要点、アクションアイテムを見やすく表示。
            ダウンロードボタン：議事録や要点をテキストやPDFでダウンロード可能にする。
        2. バックエンドロジック
            音声認識：アップロードされた音声ファイルをテキストに変換（例：Google Speech-to-Text APIやWhisper等を利用）。
            議事録生成：変換されたテキストやアップロードされたテキストから、AI（GPT等）を用いて議事録を自動生成。
            要点・アクションアイテム抽出：AIが議事録から要点やアクションアイテムを抽出し、分類して返却。
            ファイル管理：アップロードファイルや生成結果の一時保存・管理。
        3. フロントエンドロジック (React + TypeScript)
            結果の整形・表示：AIから返却された議事録・要点・アクションアイテムを見やすい形式で表示。
            エラーハンドリング：アップロード失敗や解析失敗時のエラーメッセージ表示。
            ダウンロード機能：ユーザーが生成結果を簡単にダウンロードできるようにする。
        【Mermaid記法の図】
        sequenceDiagram
            participant ユーザー
            participant フロントエンド
            participant バックエンド
            participant 音声認識サービス
            participant AI（議事録・要点抽出）

            ユーザー->>フロントエンド: 音声/テキストファイルをアップロード
            フロントエンド->>バックエンド: ファイルを送信
            alt 音声ファイルの場合
                バックエンド->>音声認識サービス: 音声ファイルをテキストに変換依頼
                音声認識サービス-->>バックエンド: テキストデータ返却
                バックエンド->>AI（議事録・要点抽出）: テキストデータを送信し議事録生成・要点抽出依頼
            else テキストファイルの場合
                バックエンド->>AI（議事録・要点抽出）: テキストデータを送信し議事録生成・要点抽出依頼
            end
            AI（議事録・要点抽出）-->>バックエンド: 議事録・要点・アクションアイテム返却
            バックエンド->>フロントエンド: 結果データ返却
            フロントエンド->>ユーザー: 議事録・要点・アクションアイテムを表示／ダウンロード
        【設計詳細】
        {design_detail}
        【Mermaid記法の図】
